{"version":3,"sources":["audio/kaboom.mp3","audio/sploosh.mp3","audio/victory.mp3","reducers/gameReducer.js","contexts/GameContext.js","components/StartScreen.js","modules/gameBoard.js","components/PlayerForm.js","components/EnemyTile.js","components/Letter.js","components/Number.js","components/EnemyMap.js","components/OwnTile.js","components/OwnMap.js","components/Loading.js","components/Game.js","components/StartOverButton.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","gameReducer","state","action","type","player","name","id","enemyTiles","personalTiles","tilesSunk","map","enemyId","tile","x","y","isSplash","isHit","GameContext","createContext","GameContextProvider","props","useReducer","storedGame","localStorage","getItem","JSON","parse","game","dispatch","useEffect","setItem","stringify","Provider","value","resetGame","sinkTile","missedShot","children","StartScreen","className","to","gameBoard","playTilesX","tiles","length","push","isFree","checkOverlap","direction","i","xCoord","coordinates","yCoord","find","checkBoundary","lengthRemainder","coord","letterArray","text","uuidv4","numArr","numArray","randomNames","PlayerForm","useState","setPlayer","useContext","winner","index","Math","floor","random","randIndex","setRandIndex","onSubmit","event","preventDefault","playerId","placements","newTiles","isOverlapped","isPastBound","j","square","getShipPlacements","onChange","target","placeholder","EnemyTile","backgroundStyle","hitTile","nextTurn","onClick","result","classList","add","onMouseOver","onMouseOut","remove","style","backgroundColor","Letter","char","Number","num","kaboomSrc","require","kaboomSound","Audio","splooshSrc","splooshSound","EnemyMap","thisPlayer","thisEnemy","numberArr","playerInfo","enemysPersonalTiles","enemyInfo","enemyPTile","filter","playTile","console","log","load","currentTime","play","TileComponents","key","LetterComponents","NumberComponents","OwnTile","background","winSrc","winSound","OwnMap","loser","Loading","Game","loading","setLoading","turn","setTurn","check","setCheck","setWinner","setLoser","setThisPlayer","setThisEnemy","timer","setTimeout","nextOne","getNextPlayer","nextEnemy","toggleCheck","clearTimeout","isOver","isGameOver","setResults","toggleLoading","isLoser","winnerName","loserName","trim","StartOverButton","display","App","basename","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ecb33792.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kaboom.45697063.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sploosh.1e61fa55.mp3\";","module.exports = __webpack_public_path__ + \"static/media/victory.344b5d23.mp3\";","const gameReducer = (state, action) => {\n  switch(action.type) {\n    case 'ADD_PLAYER':\n      return [\n        ...state,\n        {\n          player: action.player.name,\n          id: action.player.id,\n          enemyTiles: action.player.enemyTiles,\n          personalTiles: action.player.personalTiles,\n          tilesSunk: 0,\n        }\n      ];\n    case 'MISS':\n      return state.map(player => {\n        if (player.id === action.player.enemyId) return player;\n        \n        return {\n          ...player,\n          enemyTiles: player.enemyTiles.map(tile => {\n            if (tile.x === action.player.x && tile.y === action.player.y) {\n              return {\n                ...tile,\n                isSplash: true\n              }\n            }\n\n            return tile;\n          })\n        }\n      });\n    case 'HIT':\n      return state.map(player => {\n        if (player.id === action.player.enemyId) {\n          return {\n            ...player,\n            personalTiles: player.personalTiles.map(tile => {\n              if (tile.x === action.player.x && tile.y === action.player.y) {\n                return {\n                  ...tile,\n                  isHit: true\n                }\n              }\n\n              return tile;\n            })\n          }\n        }\n        \n        return {\n          ...player,\n          enemyTiles: player.enemyTiles.map(tile => {\n            if (tile.x === action.player.x && tile.y === action.player.y) {\n              return {\n                ...tile,\n                isHit: true\n              }\n            }\n\n            return tile;\n          }),\n          tilesSunk: player.tilesSunk + 1\n        }\n      });\n    case 'RESET':\n      return [];\n    default:\n      return state;\n  }\n}\n\nexport default gameReducer;\n","import React, { useState, createContext, useEffect, useReducer } from 'react';\nimport gameReducer from '../reducers/gameReducer';\n\nexport const GameContext = createContext();\n\nconst GameContextProvider = (props) => {\n  const [game, dispatch] = useReducer(gameReducer, [], () => {\n    const storedGame = localStorage.getItem('battleship');\n    return storedGame ? JSON.parse(storedGame) : [];\n  });\n\n  useEffect(() => {\n    localStorage.setItem('battleship', JSON.stringify(game));\n  }, [game]);\n\n  const resetGame = () => {\n    dispatch({type: 'RESET'});\n  }\n\n  const sinkTile = (x, y, enemyId) => {\n    dispatch({type: 'HIT', player: {\n      enemyId, x, y\n    }});\n  }\n\n  const missedShot = (x, y, enemyId) => {\n    dispatch({type: 'MISS', player: {\n      enemyId, x, y\n    }});\n  }\n\n  return (\n    <GameContext.Provider\n    value={{\n      game, \n      dispatch, \n      resetGame,\n      sinkTile,\n      missedShot,\n    }}>\n      {props.children}\n    </GameContext.Provider>\n  )\n}\n\nexport default GameContextProvider;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './startScreen.css';\n\nconst StartScreen = () => {\n  return (\n    <div className=\"set-players-container\">\n      <div id=\"welcome-header-container\">\n        <span id=\"welcome-header\">Battleship</span>\n      </div>\n\n      <Link to=\"/player-names\">\n        <button className=\"set-players-btn\">Set Players</button>\n      </Link>\n    </div>\n  )\n}\n\nexport default StartScreen;\n","import { v4 as uuidv4 } from 'uuid';\n\nexport const gameBoard = () => {\n  const playTilesX = ['', '', '', '', '', '', '', '', '', '', ''];\n  const playTilesY = ['', '', '', '', '', '', '', '', ''];\n  let tiles = [];\n\n  for (let y = playTilesY.length; y >= 1; y--) {\n    for (let x = 1; x <= playTilesX.length; x++) {\n      tiles.push({\n        isFree: true,\n        isHit: false,\n        isSplash: false,\n        x,\n        y\n      });\n    }\n  }\n\n  return tiles;\n}\n\nconst checkOverlap = (personalTiles, tile) => {\n  if (tile.direction) {\n    // horizontal\n    for (let i = 0; i < tile.length; i++) {\n      const xCoord = tile.coordinates[0] + i;\n      const yCoord = tile.coordinates[1];\n\n      const mapTile = personalTiles.find(tile => tile.x === xCoord && tile.y === yCoord);\n      if (!mapTile.isFree) return true;\n    }\n  } else {\n    // vertical\n    for (let i = 0; i < tile.length; i++) {\n      const yCoord = tile.coordinates[1] + i;\n      const xCoord = tile.coordinates[0];\n\n      const mapTile = personalTiles.find(tile => tile.y === yCoord && tile.x === xCoord);\n      if (!mapTile.isFree) return true;\n    }\n  }\n\n  return false;\n}\n\nconst checkBoundary = tile => {\n  const lengthRemainder = tile.length - 1;\n  // if tile direction is true, it is placed horizontally\n  // 0 corresponds to the x-axis; 1 corresponds to the y-axis\n  const coord = tile.direction ? tile.coordinates[0] : tile.coordinates[1];\n  // x-axis length: 11 tiles; y-axis length: 9 tiles\n  const bound = tile.direction ? 11 : 9;\n\n  // we expect this to be positive\n  // if negative, that means the length goes past the bound\n  const diff = bound - (coord + lengthRemainder);\n\n  if (diff > 0) return false;\n\n  return true;\n}\n\nfunction getStartTile() {\n  const randomX = Math.floor(Math.random() * 11) + 1;\n  const randomY = Math.floor(Math.random() * 9) + 1;\n  return [randomX, randomY];\n}\n\nexport const getShipPlacements = personalTiles => {\n  let newTiles = personalTiles;\n\n  for (let i = 1; i <= 5; i++) {    \n    let length = i === 1 ? 5\n      : i === 2 ? 4\n      : i === 3 ? 4\n      : i === 4 ? 3\n      : 2;\n    \n    let tile = {\n      length,\n      coordinates: [],\n      direction: Math.random() > 0.5 // true: horizontal\n    }\n  \n    let isOverlapped;\n    let isPastBound;\n\n    do {\n      tile.coordinates = getStartTile();\n      isPastBound = checkBoundary(tile);\n  \n      if (isPastBound) {\n        isOverlapped = true;\n      } else {\n        isOverlapped = checkOverlap(newTiles, tile);\n      }\n    } while (isOverlapped || isPastBound)\n\n    for (let j = 0; j < length; j++) {\n      if (tile.direction) {\n        // horizontal\n        const xCoord = tile.coordinates[0] + j;\n        const yCoord = tile.coordinates[1];\n\n        newTiles = newTiles.map(square => {\n          if (square.x === xCoord && square.y === yCoord) {\n            return {\n              ...square,\n              isFree: false\n            }\n          }\n\n          return square;\n        })\n      } else {\n        // vertical\n        const yCoord = tile.coordinates[1] + j;\n        const xCoord = tile.coordinates[0];\n\n        newTiles = newTiles.map(square => {\n          if (square.y === yCoord && square.x === xCoord) {\n            return {\n              ...square,\n              isFree: false\n            }\n          }\n\n          return square;\n        })\n      }\n    }\n  }\n\n  return newTiles;\n}\n\nexport const letterArray = [\n  {\n    text: 'A',\n    id: uuidv4()\n  },\n  {\n    text: 'B',\n    id: uuidv4()\n  },\n  {\n    text: 'C',\n    id: uuidv4()\n  },\n  {\n    text: 'D',\n    id: uuidv4()\n  },\n  {\n    text: 'E',\n    id: uuidv4()\n  },\n  {\n    text: 'F',\n    id: uuidv4()\n  },\n  {\n    text: 'G',\n    id: uuidv4()\n  },\n  {\n    text: 'H',\n    id: uuidv4()\n  },\n  {\n    text: 'I',\n    id: uuidv4()\n  },\n  {\n    text: 'J',\n    id: uuidv4()\n  },\n  {\n    text: 'K',\n    id: uuidv4()\n  }\n];\n\nexport const numArr = () => {\n  let numArray = [];\n\n  for (let i = 9; i > 0; i--) {\n    numArray.push({\n      text: i,\n      id: uuidv4()\n    });\n  }\n\n  return numArray;\n}\n\nexport const getShipLength = ships => {\n  // returns remaining ship length\n  \n  if (ships === 0) return 1;\n  if (ships === 1 || ships === 2) return 2;\n  if (ships === 3) return 3;\n  if (ships === 4) return 4;\n}\n","import React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { GameContext } from '../contexts/GameContext';\nimport { gameBoard, getShipPlacements } from '../modules/gameBoard';\n\nimport './playerForm.css';\n\nconst randomNames = ['Captain Morgan', 'El Capitán', 'Admiral Nelson', 'Blackbeard', 'Hook'];\n\nconst PlayerForm = () => {\n  const [player, setPlayer] = useState('');\n  const { game, dispatch, winner } = useContext(GameContext);\n\n  const handleChange = (event) => {\n    setPlayer(event.target.value);\n  }\n\n  const [randIndex, setRandIndex] = useState({\n    index: Math.floor(Math.random() * 5)\n  });\n\n  const addPlayer = (event) => {\n    event.preventDefault();\n\n    const playerId = (game.length === 0) ? 'A' : 'B';\n\n    const placements = gameBoard();\n    const enemyTiles = gameBoard();\n\n    const personalTiles = getShipPlacements(placements);\n\n    dispatch({\n      type: 'ADD_PLAYER',\n      player: {\n        id: playerId,\n        name: player,\n        personalTiles,\n        enemyTiles\n      }\n    });\n\n    setRandIndex({\n      ...randIndex,\n      index: Math.floor(Math.random() * 5)\n    });\n\n    setPlayer('');\n  }\n\n  if (game.length === 2) {\n    return (\n      <div className=\"start-btn-container\">\n        <Link to=\"/play\">\n          <button className=\"start-btn\">Start Game</button>\n        </Link>\n      </div>\n    )\n  }\n\n  return (\n    <div id=\"player-form-container\">\n      <form onSubmit={addPlayer} className=\"player-form\">\n        <span className=\"name-label\">\n          {\n            game.length === 0 ? 'Enter First Name: ' : 'Enter Second Name: '\n          }\n        </span>\n        <input \n          type=\"text\"\n          name=\"player\"\n          value={player}\n          onChange={handleChange}\n          placeholder={randomNames[randIndex.index]}\n          className=\"name-input\"\n        />\n        <button className=\"submit-form-btn\">Submit</button>\n      </form>\n    </div>\n  )\n}\n\nexport default PlayerForm;\n","import React from 'react';\n\nimport './enemyTile.css';\n\nconst EnemyTile = ({ tile, hitTile, nextTurn }) => {\n  let backgroundStyle;\n  if (tile.isHit) backgroundStyle = 'black';\n  else if (tile.isSplash) backgroundStyle = 'white';\n  \n  const displayPreview = event => {\n    if (tile.isHit || tile.isSplash) return;\n    \n    event.target.classList.add('hover');\n  }\n\n  const removePreview = event => {\n    if (tile.isHit || tile.isSplash) return;\n\n    event.target.classList.remove('hover');\n  }\n\n  const fireCannon = event => {\n    if (tile.isHit || tile.isSplash) return;\n\n    const result = hitTile(tile);\n    if (result === 'hit') {\n      event.target.classList.add('hit');\n    } else if (result === 'splash') {\n      event.target.classList.add('splash');\n    }\n\n    nextTurn();\n  }\n\n  return (\n    <div\n      className=\"tile\"\n      onClick={fireCannon}\n      onMouseOver={displayPreview}\n      onMouseOut={removePreview}\n      style={{\n        backgroundColor: backgroundStyle\n      }}\n    >\n    </div>\n  )\n}\n\nexport default EnemyTile;\n","import React from 'react';\n\nimport './letter.css';\n\nconst Letter = ({ char }) => {\n  return (\n    <div className=\"letter\">{char.text}</div>\n  )\n}\n\nexport default Letter;\n","import React from 'react';\n\nimport './number.css';\n\nconst Number = ({ num }) => {\n  return (\n    <div className=\"number\">{num.text}</div>\n  )\n}\n\nexport default Number;\n","import React, { useContext } from 'react';\nimport { letterArray, numArr } from '../modules/gameBoard';\nimport EnemyTile from './EnemyTile';\nimport Letter from './Letter';\nimport Number from './Number';\nimport { GameContext } from '../contexts/GameContext';\n\nimport './enemyMap.css';\n\nconst kaboomSrc = require('../audio/kaboom.mp3');\nconst kaboomSound = new Audio(kaboomSrc);\n\nconst splooshSrc = require('../audio/sploosh.mp3');\nconst splooshSound = new Audio(splooshSrc);\n\nconst EnemyMap = ({ thisPlayer, thisEnemy, nextTurn, winner }) => {\n  const { sinkTile, missedShot } = useContext(GameContext);\n  const numberArr = numArr();\n\n  const { playerInfo, enemyTiles } = thisPlayer;\n  const { enemyInfo, enemysPersonalTiles, id } = thisEnemy;\n\n  const hitTile = tile => {\n    const x = tile.x;\n    const y = tile.y;\n\n    const enemyPTile = enemysPersonalTiles.filter(tile => tile.x === x && tile.y === y);\n\n    const playTile = enemyTiles.filter(tile => tile.x === x && tile.y === y);\n\n    if (!enemyPTile[0].isFree && !playTile[0].isHit) {\n      // occupied by active ship tile\n      console.log('hit');\n\n      kaboomSound.load();\n        kaboomSound.currentTime = 0;\n        kaboomSound.play();\n\n      sinkTile(x, y, id);\n      return 'hit';\n    } else if (enemyPTile[0].isFree && !playTile[0].isHit && !playTile[0].isSplash) {\n      // not occupied by anything\n      console.log('splash');\n\n      splooshSound.load();\n        splooshSound.currentTime = 0;\n        splooshSound.play();\n\n      missedShot(x, y, id);\n      return 'splash';\n    }\n\n    return false;\n  }\n\n  const TileComponents = enemyTiles.map((tile, i) => {\n    return (\n      <EnemyTile \n        key={i}\n        tile={tile}\n        hitTile={hitTile}\n        nextTurn={nextTurn}\n      />\n    )\n  });\n\n  const LetterComponents = letterArray.map(char => {\n    return (\n      <Letter \n        key={char.id}\n        char={char}\n      />\n    )\n  });\n\n  const NumberComponents = numberArr.map(num => {\n    return (\n      <Number \n        key={num.id}\n        num={num}\n      />\n    )\n  });\n\n  if (winner.id.length > 0) {\n    return (\n      <div className=\"empty\"></div>\n    )\n  }\n\n  return (\n    <div className=\"tile-display\">\n      <h2 className=\"target-header\">Choose a target</h2>\n      \n      <div className=\"numbers enemy\">\n        {NumberComponents}\n      </div>\n\n      <div className=\"tiles\">\n        {TileComponents}\n      </div>\n\n      <div className=\"letters enemy\">\n        {LetterComponents}\n      </div>\n    </div>\n  )  \n}\n\nexport default EnemyMap;\n","import React from 'react';\n\nimport './ownTile.css';\n\nconst OwnTile = ({ tile }) => {\n  let backgroundStyle;\n  if (tile.isHit) backgroundStyle = 'black';\n  else if (!tile.isFree) backgroundStyle = 'rgb(150,18,6)';\n  else backgroundStyle = 'rgb(123,199,247)';\n\n  return (\n    <div\n      className=\"tile\" \n      style={{\n        background: backgroundStyle\n      }}\n    >\n    </div>\n  )\n}\n\nexport default OwnTile;\n","import React from 'react';\nimport { letterArray, numArr } from '../modules/gameBoard';\nimport OwnTile from './OwnTile';\nimport Letter from './Letter';\nimport Number from './Number';\n\nimport './ownMap.css';\n\nconst winSrc = require('../audio/victory.mp3');\nconst winSound = new Audio(winSrc);\n\nconst OwnMap = ({ thisPlayer, winner, loser }) => {\n  const numberArr = numArr();\n\n  const { playerInfo } = thisPlayer;\n  const personalTiles = playerInfo.personalTiles;\n\n  const TileComponents = personalTiles.map((tile, i) => {\n    return (\n      <OwnTile \n        key={i}\n        tile={tile}\n      />\n    )\n  });\n\n  const LetterComponents = letterArray.map(char => {\n    return (\n      <Letter \n        key={char.id}\n        char={char}\n      />\n    )\n  });\n\n  const NumberComponents = numberArr.map(num => {\n    return (\n      <Number \n        key={num.id}\n        num={num}\n      />\n    )\n  });\n\n  if (winner.id.length > 0) {\n    winSound.load();\n      winSound.currentTime = 0;\n      winSound.play();\n      \n    return (\n      <div className=\"winner-header-container\">\n        <h1 id=\"winner-header\">Congratulations to {winner.id} for defeating {loser.id}!</h1>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"tile-display\">\n      <h2>These are your ships, {playerInfo.player}</h2>\n\n      <div className=\"numbers\">\n        {NumberComponents}\n      </div>\n\n      <div className=\"tiles\">\n        {TileComponents}\n      </div>\n      \n      <div className=\"letters\">\n        {LetterComponents}\n      </div>\n    </div>\n  )\n}\n\nexport default OwnMap;\n","import React from 'react';\n\nimport './loading.css';\n\nconst Loading = () => {\n  return (\n    <div className=\"loading-container\">\n      <h1 id=\"loading-header\">...Loading next player</h1>\n    </div>\n  )\n}\n\nexport default Loading;\n","import React, { useState, useEffect, useContext } from 'react';\nimport EnemyMap from './EnemyMap';\nimport OwnMap from './OwnMap';\nimport { GameContext } from '../contexts/GameContext';\nimport Loading from './Loading';\n\nimport './game.css';\n\nconst Game = () => {\n  const { game } = useContext(GameContext);\n\n  const [loading, setLoading] = useState(true);\n  const [turn, setTurn] = useState(0);\n  const [check, setCheck] = useState(false);\n\n  const [winner, setWinner] = useState({\n    id: ''\n  });\n\n  const [loser, setLoser] = useState({\n    id: ''\n  });\n\n  const [thisPlayer, setThisPlayer] = useState({\n    id: 'B',\n    playerInfo: [],\n    enemyTiles: []\n  });\n\n  const [thisEnemy, setThisEnemy] = useState({\n    id: 'A',\n    enemyInfo: [],\n    enemysPersonalTiles: []\n  });\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      const nextOne = getNextPlayer(thisPlayer.id);\n      const playerInfo = game.filter(player => player.id === nextOne);\n      \n      setThisPlayer({\n        ...thisPlayer,\n        id: nextOne,\n        playerInfo: playerInfo[0],\n        enemyTiles: playerInfo[0].enemyTiles\n      });\n\n      const nextEnemy = getNextPlayer(thisEnemy.id);\n      const enemyInfo = game.filter(player => player.id === nextEnemy);\n\n      setThisEnemy({\n        ...thisEnemy,\n        id: nextEnemy,\n        enemyInfo: enemyInfo[0],\n        enemysPersonalTiles: enemyInfo[0].personalTiles\n      });\n\n      toggleCheck();\n    }, 1400);\n\n    return () => clearTimeout(timer);\n  }, [turn]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      const isOver = isGameOver();\n        if (isOver === 'winner') setResults('winner');\n        else if (isOver === 'loser') setResults('loser');\n\n      toggleLoading();\n    }, 1800);\n  }, [check]);\n\n  const getNextPlayer = id => {\n    return id === 'A' ? 'B' : 'A';\n  }\n\n  const toggleLoading = () => {\n    setLoading(!loading);\n  }\n\n  const toggleCheck = () => {\n    setCheck(!check);\n  }\n\n  const nextTurn = () => {\n    toggleLoading();\n\n    turn === 0 ?\n      setTurn(turn + 1) :\n      setTurn(turn - 1);\n  }\n\n  const isGameOver = () => {\n    const isLoser = thisEnemy.enemyInfo.tilesSunk === 18;\n    const isWinner = thisPlayer.playerInfo.tilesSunk === 18;\n    if (isWinner) return 'winner';\n    else if (isLoser) return 'loser';\n    else return false;\n  }\n\n  const setResults = result => {\n    const winnerName = result === 'winner' ? thisPlayer.playerInfo.player : thisEnemy.enemyInfo.player;\n    /* const loserName = result === 'loser' ? thisEnemy.enemyInfo.player : thisPlayer.playerInfo.player; */\n    const loserName = winnerName === thisEnemy.enemyInfo.player ? thisPlayer.playerInfo.player : thisEnemy.enemyInfo.player;\n\n    setWinner({\n      ...winner,\n      id: winnerName\n    });\n\n    setLoser({\n      ...loser,\n      id: loserName\n    });\n  }\n\n  return (\n    <div className=\"game-container\">\n\n      {\n        loading ?\n          <Loading /> :\n          <div className=\"game-display\">\n            <div className=\"tile-container\">\n              <OwnMap\n                thisPlayer={thisPlayer} \n                winner={winner}\n                loser={loser}\n              />\n              <EnemyMap \n                thisPlayer={thisPlayer}\n                thisEnemy={thisEnemy}\n                nextTurn={nextTurn}\n                winner={winner}\n                loser={loser}\n              />\n            </div>\n          </div>\n      }\n      {\n        winner.id.trim() ? \n          <div className=\"empty\"></div> :\n          <div className=\"legend-container\">\n            <div className=\"splash-info\">\n              <span className=\"splash-text\">Miss = </span>\n              <div className=\"splash-legend-tile\"></div>\n            </div>\n            <div className=\"hit-info\">\n              <span className=\"hit-text\">Hit = </span>\n              <div className=\"hit-legend-tile\"></div>\n            </div>\n          </div>\n      }\n      \n    </div>\n  )\n}\n\nexport default Game;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { GameContext } from '../contexts/GameContext';\n\nconst StartOverButton = () => {\n  const { resetGame, game } = useContext(GameContext);\n\n  if (game.length < 1) {\n    return (\n      <div className=\"empty\" style={{ display: 'none' }}></div>\n    )\n  }\n\n  return (\n    <div className=\"start-over-container\">\n      <Link to=\"/\">\n        <button onClick={resetGame} className=\"start-over-btn\">Start Over</button>\n      </Link>\n    </div>\n  )\n}\n\nexport default StartOverButton;\n","import React from 'react';\nimport { BrowserRouter, HashRouter, Route } from 'react-router-dom';\nimport GameContextProvider from './contexts/GameContext';\nimport StartScreen from './components/StartScreen';\nimport PlayerForm from './components/PlayerForm';\nimport Game from './components/Game';\nimport StartOverButton from './components/StartOverButton';\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n      <div className=\"App\">\n        <GameContextProvider>\n          <Route exact path=\"/\" component={StartScreen}/>\n          <StartOverButton />\n          <Route exact path=\"/player-names\" component={PlayerForm}/>\n          <Route exact path=\"/play\" component={Game}/>\n        </GameContextProvider>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}